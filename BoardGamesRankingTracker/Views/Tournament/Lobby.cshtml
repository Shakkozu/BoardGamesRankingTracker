@model BoardGamesRankingTracker.Models.TournamentLobbyViewModel
@{
    ViewBag.Title = "Lobby";
}

<h2>Lobby</h2>
<div class="container">

    <h5>Players in lobby</h5>
    <input type="hidden" id="displayname" value="@User.Identity.Name.Replace(" ","")" />
    <ul id="players">
        @foreach (var player in Model.Lobby.Players)
        {
            string id_string = player.Nickname.Replace(" ", "");
            <li id="@id_string"><strong>@player.Nickname</strong></li>
            @*

                    var id = name.replace(/\s+/gm, '')

                        $('#players').append('<li id=' + id + '><strong>' + htmlEncode(name)
                + '</strong> ' + '</li>');
            *@
        }

    </ul>


</div>


<h6>Lobby Key:<a>@Model.Lobby.PrivateKey</a></h6>
@using (Html.BeginForm("Leave", "Tournament", new { ReturnUrl = ViewBag.ReturnUrl, privateKey = Model.Lobby.PrivateKey }, FormMethod.Post,
    new { @class = "form-horizontal", role = "form", id = "leave-form" }))
{
    @Html.AntiForgeryToken()
    <div class="container form">
        <input type="submit" value="Leave Tournamnent!" />
    </div>


}
@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var lobby = $.connection.lobbyHub;
            // Create a function that the hub can call back to display messages.

            lobby.client.hello = function (name) {

                var id = name.replace(/\s+/gm, '')
                if ($("#players:contains(" + id + ")").length == 0) {
                    $('#players').append('<li id=' + id + '><strong>' + htmlEncode(name)
                        + '</strong> ' + '</li>');
                }

            };

            lobby.client.goodbye = function (name) {
                var id = '#' + name.replace(/\s+/gm, '')
                $(id).remove();
            };

            // Get the user name and store it to prepend to messages.
            //$('#displayname').val("");
            // Set initial focus to message input box.
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#leave-form').submit(function () {
                    // Call the Send method on the hub.
                    lobby.server.goodbye($('#displayname').val());
                });

                $(document).ready(function () {

                    lobby.server.hello($('#displayname').val());
                })

            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}