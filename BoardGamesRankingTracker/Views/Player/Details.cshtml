@using PagedList.Mvc;
@model BoardGamesRankingTracker.Models.PlayerViewModel
@{
    ViewBag.Title = "Profile";
}


<h2>@ViewBag.Title</h2>

<div class="container player-frame text-center text-center">
    <div class="row border justify-content-center">
        <div class="col-4">
            <h4>img</h4>
            <img src="" />
        </div>
        <div class="col-8">
            <h4>@Html.ValueFor(m => m.Nickname)</h4>
        </div>
    </div>
</div>


@Html.AntiForgeryToken()
@using (Html.BeginForm())
{
    <div class="container form">
        <div class="form-group">
            <label for="gameType">Gametype</label>
            <select class="form-control" name="currentFilter" id="gameType" aria-describedby="gameHelp" placeholder="Enter Player Nickname">
                @foreach (var type in Model.RankingPoints)
                {
                    if (Model.SelectedGame == type.Key.ToString())
                    {
                        <option selected>@type.Key.ToString()</option>
                    }
                    else
                    {
                        <option>@type.Key.ToString()</option>
                    }

                }
            </select>
        </div>
        <div class="form-group">
            <input type="submit" value="Search" />
        </div>

    </div>
}

<div class="playerstat-table">
    <table class="table table-light">
        <thead>
            <tr>
                <td>Joined</td>
                <td>Games Played</td>
                <td>Rating</td>
                <td>W&nbsp;/&nbsp;L&nbsp;/&nbsp;T</td>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@Model.JoinedOn.ToShortDateString() </td>
                <td>@Model.GamesPlayed[Model.SelectedGame]</td>
                <td>@Model.RankingPoints[Model.SelectedGame] </td>
                <td>
                    @Model.GamesWon[Model.SelectedGame] /
                    @Model.GamesLost[Model.SelectedGame] /
                    @Model.GamesTied[Model.SelectedGame]
                </td>
            </tr>
        </tbody>
    </table>
</div>

<div class="container playermatches-table">
    <h3>Completed Games</h3>
    <div class="container">
        <div class="row matches-head">
            <div class="col">    <h4>Players</h4>    </div>
            <div class="col">    <h4>Result</h4>    </div>
            <div class="col">    <h4>Date</h4>    </div>
        </div>
        <div class="matches-body">
            @foreach (var item in Model.PlayerMatchups.Keys)
            {

                if (item == Model.SelectedGame)
                {

                    foreach (var val in Model.PlayerMatchups[item])
                    {
                        <div class="row matches-row">
                            <div class="col">
                                <div class="row">
                                    @foreach (var player in val.Players)
                                    {
                                        <div class="col-12">
                                            <h6>@player.Nickname</h6>
                                        </div>
                                    }
                                </div>
                            </div>
                            <div class="col">
                                <div class="row">
                                    @foreach (var player in val.Players)
                                    {
                                        int result = val.Winner == player.Id ? 1 : 0;
                                        <div class="col-12"><h6>@result</h6></div>
                                    }
                                </div>
                            </div>
                            <div class="col align-self-center">
                                <div class="col-12"><h6>@val.PlayedOn.ToShortDateString()</h6></div>
                            </div>
                        </div>


                    }


                }
                <hr />
            }





        </div>

        Page @(Model.PlayerMatchups[Model.SelectedGame].PageCount < Model.PlayerMatchups[Model.SelectedGame].PageNumber ?
        0 : Model.PlayerMatchups[Model.SelectedGame].PageNumber) of @Model.PlayerMatchups[Model.SelectedGame].PageCount
        @Html.PagedListPager(Model.PlayerMatchups[Model.SelectedGame], page => Url.Action("Details",
        new { page, currentFilter = ViewBag.CurrentFilter }))
    </div>
